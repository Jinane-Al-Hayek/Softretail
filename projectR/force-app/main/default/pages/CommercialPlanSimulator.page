<apex:page standardController="Commercial_Plan__c" extensions="CommercialPlanSimulatorController" lightningStylesheets="true" docType="html-5.0">
    <apex:stylesheet value="{!URLFOR($Resource.Assets, 'assets/css/app.css')}"/>
    <style type="text/css">
        a.alpha-link {font-weight: normal;font-size: 91%;padding: 0 4px;color: #015BA7 !important;}
        a.alpha-link+a.alpha-link {border-left: 1px solid #CFCECE;}
        a.alpha-link:hover {background-color: #e0f5fc !important;}
        a.alpha-select {font-weight: bold;text-decoration: none;background-color: #C6E1FF;color: #000000 !important;}
        .headerRow .redTitle {color: #CC0000 !important;} .greenTitle {color: #008000 !important;}
        .imgclass:hover{background-image:url(/img/help/helpOrbs.gif);background-repeat:no-repeat;width:16px;height:15px;background-position:right;} 
        .imgclass{background-image:url(/img/help/helpOrbs.gif);background-repeat:no-repeat;width:16px;height:15px;} 
        .bPageBlock .detailList .labelCol{width:15%;text-align:left;}
        .bPageBlock .detailList .dataCol{width:18%;}
    </style>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"/>
    <apex:includeScript value="https://code.jquery.com/jquery-1.12.4.js" />
    <apex:includeScript value="https://code.jquery.com/ui/1.12.1/jquery-ui.js" />
    <script>
    function onChangeStructureLevelHandler(name, id) {       
        refresh();
    }
    function onChangeBrandHandler(name, id) {
        refresh();
    }
    function onChangeNegoScopeHandler(name, id) {
        refresh();
    }
    function checkAll(cb) {
        var inputElem = document.getElementsByTagName("input");
        for (var i = 0; i < inputElem.length; i++) {
            if (inputElem[i].id.indexOf("checkedone") != -1)
                inputElem[i].checked = cb.checked;
        }
    }
    </script>
    
    <apex:pageMessages id="messages"/>
    <apex:form id="theForm" rendered="{!commercialPlan != null}">
        <apex:actionStatus id="globalloading">
            <apex:facet name="start">
                <div class="loading-overlay">
                    <div class="loader-img"></div>
                    <div class="loading-block">{!$Label.Loading}</div>
                </div>
            </apex:facet>
        </apex:actionStatus>
        <apex:variable var="tabindex" value="{!17}"/>
        <apex:actionFunction name="refresh" action="{!refresh}" reRender="valueSection" />
        <apex:pageBlock title="{!commercialPlan.Name} - {!commercialPlan.Event_Code__c}" id="pbId">
            <apex:outputPanel >
                <apex:actionStatus id="changeStatus" >
                    <apex:facet name="start" >
                        <img src="/img/loading.gif" />
                    </apex:facet>
                </apex:actionStatus>
            </apex:outputPanel>
            
            <!-- Simulation Head -->
            <apex:pageBlockSection id="simulationHead" title="{!$Label.LBL_Simulation_Head}" collapsible="true" columns="3">
                <apex:selectList label="{!$Label.LBL_Sellin_or_Sellout}" value="{!sellInOrOut}" multiselect="false" size="1" required="true" tabIndex="1" >
                    <apex:selectOptions value="{!sellInOrOutOptions}"/>
                    <apex:actionSupport event="onchange" action="{!changeStatus}" reRender="simulationGridPanel" status="changeStatus"/>
                </apex:selectList>
                <apex:outputPanel />
                <apex:outputPanel />
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="{!$Label.LBL_Select_Period}" />
                    <apex:pageBlockSectionItem >
                        <apex:outputPanel >
                            <apex:outputField value="{!commercialPlan.Start_Date__c}" />
                            <apex:outputLabel value=" - " />
                        </apex:outputPanel>
                        <apex:outputPanel >
                            <apex:outputField value="{!commercialPlan.End_Date__c}" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>
                </apex:pageBlockSectionItem>
                <apex:selectList label="{!$Label.LBL_History_Reference}" value="{!historyReference}" multiselect="false" size="1" tabIndex="2">                    
                    <apex:selectOptions value="{!historyReferenceOptions}"/>
                    <apex:actionSupport event="onchange" action="{!changeHistoryPeriod}" reRender="simulationHead,simulationGridPanel" status="changeStatus"/>
                </apex:selectList>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="{!$Label.LBL_History_Period}" />
                    <apex:pageBlockSectionItem >
                        <apex:outputPanel >
                            <apex:outputText value="{!sStartHistoryPeriod}" />
                            <apex:outputLabel value=" - " />
                        </apex:outputPanel>
                        <apex:outputPanel >
                            <apex:outputText value="{!sEndHistoryPeriod}" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>
                </apex:pageBlockSectionItem>
                <apex:inputText label="{!$Label.LBL_Amount}" id="amount" value="{!amount}" onkeyup="decimalOnly(this);" tabIndex="3" />
                <apex:inputText label="{!$Label.LBL_Percentage}" id="contributionRate" value="{!contributionRate}" onkeyup="decimalOnly(this);" tabIndex="4" />
                <apex:inputText label="{!$Label.LBL_Elasticity}" id="elasticityRateCalc" value="{!elasticityRateCalc}" onkeyup="decimalOnly(this);" tabIndex="5" />
                <apex:outputField value="{!commercialPlan.Condition_Code__c}" />
                <apex:inputText label="{!$Label.LBL_Regular_Nego_Discount}" id="correctionRate" value="{!correctionRate}" onkeyup="decimalOnly(this);" tabIndex="6" />
                
                <apex:outputPanel >
                    <apex:commandButton value="{!$Label.LBL_Refresh}" action="{!calculateSimulatorValue}" rerender="simulationGridPanel" status="refreshValue" tabIndex="7" />
                    <apex:outputPanel >
                        <apex:actionStatus id="refreshValue" >
                            <apex:facet name="start" >
                                <img src="/img/loading.gif" />
                            </apex:facet>
                        </apex:actionStatus>
                    </apex:outputPanel>
                </apex:outputPanel>
            </apex:pageBlockSection>
            
            <!-- Search Criteria -->
            <apex:pageBlockSection id="productFilter" title="{!$Label.LBL_Search} / {!$Label.LBL_Select}" collapsible="true" columns="1">
                <apex:pageBlockSection columns="3">
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.Supplier_PG_Mapping__c.fields.Supplier__c.Label}" />
                        <apex:pageBlockSectionItem >
                            <apex:outputPanel >
                                <apex:outputLink value="/{!commercialPlan.Supplier__c}" target="_blank">
                                    <apex:outputField value="{!commercialPlan.Supplier__r.Name}" />
                                </apex:outputLink>
                                <apex:outputLabel value=" - " />
                            </apex:outputPanel>
                            <apex:outputPanel >
                                <apex:outputField value="{!commercialPlan.Supplier__r.Code__c}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.Supplier_PG_Mapping__c.fields.Nego_Scope__c.Label}" />
                        <c:AdvancedLookup sObjectName="Sup_sup_NegoScope__c"
                                          value="{!negoScopeLookup}"
                                          searchFields="Name, NS_Code__c" 
                                          formFields="Name, NS_Code__c"
                                          canCreate="false"
                                          fieldLabel="Name"
                                          tabIndexLookup="8"
                                          multiSelect="false"
                                          onchange="onChangeNegoScopeHandler"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.Orga_HE__c.fields.Name.Label}" />
                        <c:AdvancedLookup sObjectName="Orga_HE__c"
                                          value="{!structureLevelLookup}"
                                          searchFields="Name, Elt_Code__c"
                                          formFields="Name, Elt_Code__c"
                                          canCreate="false"
                                          fieldLabel="Name"
                                          tabIndexLookup="9"
                                          multiSelect="true"
                                          onchange="onChangeStructureLevelHandler"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.Supplier_PG_Mapping__c.fields.Brand__c.Label}" />
                        <c:AdvancedLookup sObjectName="Sup_Brand__c"
                                          value="{!brandLookup}" 
                                          searchFields="Name, Brand_code__c" 
                                          formFields="Name, Brand_code__c"
                                          canCreate="false"
                                          fieldLabel="Name"
                                          tabIndexLookup="10"
                                          multiSelect="true"
                                          onchange="onChangeBrandHandler"/>
                    </apex:pageBlockSectionItem>
                    <apex:inputCheckbox label="{!$Label.LBL_In_Assortment}" value="{!inAssortment}" id="inAssortment" tabIndex="11" />
                    <apex:inputCheckbox label="{!$ObjectType.Product2.fields.IsActive.Label}" value="{!isActiveProduct}" id="isActiveProduct" tabIndex="12" />
                    <apex:inputText label="{!$Label.LBL_Search}" value="{!searchName}" tabIndex="13" />
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel />
                        <apex:outputPanel >
                            <apex:commandButton value="{!$Label.LBL_Search}" action="{!searchProduct}" rerender="productPanel" status="search_reset" oncomplete="removeCheckAll()" tabIndex="14" />
                            <apex:commandButton value="{!$Label.LBL_Reset}" action="{!resetProduct}" rerender="productFilter,productPanel" status="search_reset" oncomplete="removeCheckAll()" tabIndex="15" />
                            <apex:actionStatus id="search_reset" >
                                <apex:facet name="start" >
                                    <img src="/img/loading.gif" />                    
                                </apex:facet>
                            </apex:actionStatus>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSection id="valueSection" columns="3">
                        <apex:outputText value="{!structureLevelLookup}" style="display:none;" />
                        <apex:outputText value="{!brandLookup}" style="display:none;" />
                        <apex:outputText value="{!negoScopeLookup}" style="display:none;" />
                    </apex:pageBlockSection>
                </apex:pageBlockSection>
                
                <!-- Search Products -->
                <apex:outputPanel id="productPanel">
                    <apex:actionFunction name="refreshPageSize" action="{!refreshPageSize}" status="fetchStatus" reRender="productPanel"/>
                    <!-- loading message -->
                    <apex:outputPanel >
                        <apex:actionStatus id="productStatus" >
                            <apex:facet name="start" >
                                <img src="/img/loading.gif" />
                            </apex:facet>
                        </apex:actionStatus>
                    </apex:outputPanel>
                    <apex:outputPanel style="float:right;">
                        <!-- alphabet selection -->
                        <apex:repeat value="{!alphaList}" var="a">
                            <apex:commandLink value="{!a}" action="{!BuildProductQuery}" rerender="productPanel"
                                              styleClass="alpha-link{!if(alphaFilter=a,' alpha-select','')}" status="productStatus">
                                <apex:param name="alphaFilter" value="{!a}" assignTo="{!alphaFilter}" />
                            </apex:commandLink>
                        </apex:repeat>
                    </apex:outputPanel>
                    <apex:inputHidden value="{!alphaFilter}" id="hiddenField" />
                    <!-- product table -->
                    <apex:pageBlockTable id="productTable" value="{!products}" var="item">
                        <apex:column style="width:1%;" >
                            <apex:facet name="header">
                                <apex:inputCheckbox id="checkAll" styleClass="checkAllProduct" onclick="checkAll(this)" />
                            </apex:facet>
                            <apex:inputCheckbox value="{!item.selected}" id="checkedone" />
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggle}" rerender="productPanel" status="productStatus">
                                    <apex:param name="SortField" value="ProductCode" assignTo="{!SortField}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.ProductCode.Label}{!IF(SortField=='ProductCode',IF(SortDirection='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.ProductCode}" /></apex:outputLink>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggle}" rerender="productPanel" status="productStatus">
                                    <apex:param name="SortField" value="Name" assignTo="{!SortField}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.Name.Label}{!IF(SortField=='Name',IF(SortDirection='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.Name}" /></apex:outputLink>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggle}" rerender="productPanel" status="productStatus">
                                    <apex:param name="SortField" value="Brand__r.Name" assignTo="{!SortField}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.Brand__c.Label}{!IF(SortField=='Brand__r.Name',IF(SortDirection='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!item.product.Brand__c}" />
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggle}" rerender="productPanel" status="productStatus">
                                    <apex:param name="SortField" value="Category__r.Name" assignTo="{!SortField}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.Category__c.Label}{!IF(SortField=='Category__r.Name',IF(SortDirection='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!item.product.Category__c}" />
                        </apex:column>
                        <apex:column style="text-align:center;" headerValue="{!$Label.LBL_In_Assortment}">
                            <apex:inputCheckbox value="{!item.inAssortment}" disabled="true" />
                        </apex:column>
                        <apex:facet name="footer">
                            <apex:outputPanel layout="table">
                                <apex:outputText rendered="{!NULLVALUE(noOfRecords,0)==0}" value="{!$Label.LBL_No_Record_To_Display}"/>
                                <apex:outputPanel layout="table" rendered="{!noOfRecords>0}">
                                    <apex:selectList value="{!recPerPage}" multiselect="false" size="1" onchange="refreshPageSize();">
                                        <apex:selectOptions value="{!recPerPageOption}"/>
                                    </apex:selectList>
                                    <apex:commandButton status="fetchStatus" reRender="productPanel" value="{!$Label.LBL_First}" action="{!first}" disabled="{!!StdSetControllerProduct.hasPrevious}" title="{!$Label.LBL_First}" oncomplete="removeCheckAll()" /> 
                                    <apex:commandButton status="fetchStatus" reRender="productPanel" value="{!$Label.LBL_Previous}" action="{!previous}" disabled="{!!StdSetControllerProduct.hasPrevious}" title="{!$Label.LBL_Previous}" oncomplete="removeCheckAll()" /> 
                                    <apex:commandButton status="fetchStatus" reRender="productPanel" value="{!$Label.LBL_Next}" action="{!next}" disabled="{!!StdSetControllerProduct.hasNext}" title="{!$Label.LBL_Next}" oncomplete="removeCheckAll()" /> 
                                    <apex:commandButton status="fetchStatus" reRender="productPanel" value="{!$Label.LBL_Last}" action="{!last}" disabled="{!!StdSetControllerProduct.hasNext}" title="{!$Label.LBL_Last}" oncomplete="removeCheckAll()" /> 
                                    <apex:outputText style="text-align: right" >{!(StdSetControllerProduct.pageNumber * recPerPage)+1-recPerPage}-{!IF((StdSetControllerProduct.pageNumber * recPerPage)>noOfRecords, noOfRecords,
                                        (StdSetControllerProduct.pageNumber * recPerPage))} {!$Label.LBL_Of} {!noOfRecords}
                                    </apex:outputText>
                                    <apex:outputPanel >                      
                                        <apex:actionStatus id="fetchStatus" >
                                            <apex:facet name="start" >
                                                <img src="/img/loading.gif" />
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:facet>
                    </apex:pageBlockTable>
                </apex:outputPanel>
                <apex:commandButton value="{!$Label.LBL_Drag_Selected_PG}" action="{!dragProductSelected}" rerender="productPanel,simulationGridPanel"
                                    status="simulatorStatus" oncomplete="removeCheckAll()" tabIndex="16" />
            </apex:pageBlockSection>
            
            <!-- Simulator INIT Grid -->
            <apex:pageBlockSection title="{!$Label.LBL_Item_Simulator}" rendered="{!editSimulator}" collapsible="true" columns="1">
                <apex:actionFunction name="refreshPageSizeSimulatorInit" action="{!refreshPageSizeSimulatorInit}" status="fetchStatusSimulatorInitGrid" reRender="simulationInitGridPanel,simulationGridPanel"/>
                <apex:outputPanel id="simulationInitGridPanel" layout="block" style="width:100%;">
                    <!-- loading message -->
                    <apex:outputPanel >
                        <apex:actionStatus id="simulatorInitStatus" >
                            <apex:facet name="start" >
                                <img src="/img/loading.gif" />
                            </apex:facet>
                        </apex:actionStatus>
                    </apex:outputPanel>
                    <!-- Simulator Init Table -->
                    <apex:pageBlockTable value="{!simulatorInitList}" var="item" border="0" columnsWidth="5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%">
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggleSimulator}" rerender="simulationGridPanel,simulationInitGridPanel" status="simulatorInitStatus">
                                    <apex:param name="SortFieldSimulator" value="ProductCode" assignTo="{!SortFieldSimulator}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.ProductCode.Label}{!IF(SortFieldSimulator=='ProductCode',IF(SortDirectionSimulator='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.ProductCode}" /></apex:outputLink>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggleSimulator}" rerender="simulationGridPanel,simulationInitGridPanel" status="simulatorInitStatus">
                                    <apex:param name="SortFieldSimulator" value="Name" assignTo="{!SortFieldSimulator}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.Name.Label}{!IF(SortFieldSimulator=='Name',IF(SortDirectionSimulator='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.Name}" /></apex:outputLink>
                            <apex:facet name="footer">
                                <apex:outputText value="{!$Label.LBL_Total}" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_COGS_unit}">
                            <apex:outputText value="{!item.COGS.decimalLabel}" style="float: right;" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_In_Price_unit}">
                            <apex:outputText value="{!item.sellinPrice.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalSellinPriceInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Gross_Margin}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.grossMargin.percentageLabel}" style="float: right;" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_in_Units}" headerClass="redTitle" >                           
                            <apex:outputText value="{!item.sellinUnit.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalSellinUnitInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_In_Value}" headerClass="redTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.sellinValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalSellinValueInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Market_Share}" headerClass="redTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.marketShare.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalMarketShareInit.percentageLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <!-- CASE SELECT SellOUT -->
                        <apex:column headerValue="{!$Label.LBL_PVP_unit}" style="background-color:#99ff99;">                            
                            <apex:outputText value="{!item.PVP.decimalLabel}" style="float: right;" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_Out_Units}" style="background-color:#99ff99;">                            
                            <apex:outputText value="{!item.sellOutUnit.decimalLabel}" style="float: right;"/>
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalSellOutUnitInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <!------------------------>
                        <apex:column headerValue="{!$Label.LBL_Sell_Out_Value}" style="background-color:#99ff99;">
                            <apex:outputText value="{!item.sellOutValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalSellOutValueInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Unit}" headerClass="greenTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.units.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalUnitsInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Value}" headerClass="greenTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.value.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalValueInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_in_Value}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.discountedValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalDiscountedValueInit.decimalLabel}" style="color:#CC0000;float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Disc_Sell_Out}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.discSellOut.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalDiscSellOutInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Cor_Sell_In}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.corSellIn.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalCorSellInInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Cor_COGS}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.corCOGS.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalCorCOGSInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Regular_GM}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.regularGM.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalRegularGMInit.percentageLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_GM_after_Disc}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.GMAfterDisc.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalGMAfterDiscInit.percentageLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Diff_in_pt}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.Diff.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputText value="{!totalDiffInit.decimalLabel}" style="float: right;" />
                            </apex:facet>
                        </apex:column>
                        <apex:facet name="footer">
                            <apex:outputPanel layout="table">
                                <apex:outputText rendered="{!NULLVALUE(noOfRecordsInit,0)==0}" value="{!$Label.LBL_No_Record_To_Display}"/>
                                <apex:outputPanel layout="table" rendered="{!noOfRecordsInit>0}">
                                    <apex:selectList value="{!recPerPageSimulatorInit}" multiselect="false" size="1" >
                                        <apex:actionSupport event="onchange" action="{!refreshPageSizeSimulatorInit}" status="fetchStatusSimulatorInitGrid" reRender="simulationInitGridPanel,simulationGridPanel" />
                                        <apex:selectOptions value="{!recPerPageOption}"/>
                                    </apex:selectList>
                                    <apex:commandButton status="fetchStatusSimulatorInitGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_First}" action="{!firstSimulatorPage}" disabled="{!!StdSetControllerSimulatorInit.hasPrevious}" title="{!$Label.LBL_First}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorInitGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Previous}" action="{!previousSimulatorPage}" disabled="{!!StdSetControllerSimulatorInit.hasPrevious}" title="{!$Label.LBL_Previous}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorInitGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Next}" action="{!nextSimulatorPage}" disabled="{!!StdSetControllerSimulatorInit.hasNext}" title="{!$Label.LBL_Next}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorInitGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Last}" action="{!lastSimulatorPage}" disabled="{!!StdSetControllerSimulatorInit.hasNext}" title="{!$Label.LBL_Last}" /> 
                                    <apex:outputText style="text-align: right" >{!(StdSetControllerSimulatorInit.pageNumber * recPerPageSimulatorInit)+1-recPerPageSimulatorInit}-{!IF((StdSetControllerSimulatorInit.pageNumber * recPerPageSimulatorInit)>noOfRecordsInit, noOfRecordsInit,
                                        (StdSetControllerSimulatorInit.pageNumber * recPerPageSimulatorInit))} {!$Label.LBL_Of} {!noOfRecordsInit}
                                    </apex:outputText>
                                    <apex:outputPanel >
                                        <apex:actionStatus id="fetchStatusSimulatorInitGrid" >
                                            <apex:facet name="start" >
                                                <img src="/img/loading.gif" />                    
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:outputPanel>                                 
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:facet>
                    </apex:pageBlockTable>
                </apex:outputPanel>
            </apex:pageBlockSection>
            
            <!-- Simulator FACT UPDATE Grid -->
            <apex:pageBlockSection title="{!IF(editSimulator == false, $Label.LBL_Item_Simulator, 'Fact Update')}" rendered="{!OR(!editSimulator, editSimulator && updatePromoFact)}" collapsible="true" columns="1">
                <apex:outputpanel >
                    <apex:commandButton styleClass="buttons-float-right" value="{!$Label.LBL_Import}" action="{!showPopup}" rerender="popupImportForm">
                        <apex:param name="displayImportPopup" assignTo="{!displayImportPopup}" value="true" />
                    </apex:commandButton>
                    <apex:commandButton value="{!$Label.Calculate}" action="{!calculateSimulatorValue}" rerender="simulationGridPanel" status="simulatorStatus" />
                    <apex:actionFunction name="refreshPageSizeSimulator" action="{!refreshPageSizeSimulator}" status="fetchStatusSimulatorGrid" reRender="simulationInitGridPanel,simulationGridPanel"/>
                </apex:outputpanel>
                <apex:outputPanel id="simulationGridPanel" layout="block" style="width:100%;">
                    <!-- loading message -->
                    <apex:outputPanel >
                        <apex:actionStatus id="simulatorStatus" >
                            <apex:facet name="start" >
                                <img src="/img/loading.gif" />
                            </apex:facet>
                        </apex:actionStatus>
                    </apex:outputPanel>
                    <!-- alphabet selection -->
                    <apex:outputPanel style="float:right;">
                        <apex:repeat value="{!alphaList}" var="a">
                            <apex:commandLink value="{!a}" action="{!SearchSimulatorsByAlphaFilter}" rerender="simulationGridPanel,simulationInitGridPanel"
                                              styleClass="alpha-link{!if(alphaFilterSimulator=a,' alpha-select','')}" status="simulatorStatus">
                                <apex:param name="alphaFilterSimulator" value="{!a}" assignTo="{!alphaFilterSimulator}" />
                            </apex:commandLink>
                        </apex:repeat>
                    </apex:outputPanel>
                    <apex:inputHidden value="{!alphaFilterSimulator}" id="hiddenFieldSimulator" />
                    <apex:variable var="rowNum" value="{!0}"/>                        
                    <apex:pageBlockTable value="{!simulatorList}" var="item" border="0" columnsWidth="5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%,5%">
                        <apex:column rendered="{!!editSimulator}" headervalue="{!$Label.LBL_Action}" style="text-align:center;">
                            <apex:commandLink value="X" style="color:red;" action="{!deleteProductSimulator}"
                                              rerender="productPanel,simulationGridPanel" status="simulatorStatus"
                                              onclick="if(!confirm('{!$Label.MSG_Deleting_Are_you_sure_deleting_record}')) return false;">                               
                                <apex:param name="productId" value="{!item.product.Id}" assignTo="{!productId}" />
                            </apex:commandLink>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggleSimulator}" rerender="simulationGridPanel,simulationInitGridPanel" status="simulatorStatus">
                                    <apex:param name="SortFieldSimulator" value="ProductCode" assignTo="{!SortFieldSimulator}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.ProductCode.Label}{!IF(SortFieldSimulator=='ProductCode',IF(SortDirectionSimulator='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.ProductCode}" /></apex:outputLink>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggleSimulator}" rerender="simulationGridPanel,simulationInitGridPanel" status="simulatorStatus">
                                    <apex:param name="SortFieldSimulator" value="Name" assignTo="{!SortFieldSimulator}" />
                                    <apex:outputText value="{!$ObjectType.Product2.fields.Name.Label}{!IF(SortFieldSimulator=='Name',IF(SortDirectionSimulator='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="/{!item.product.Id}" target="_blank"><apex:outputField value="{!item.product.Name}" /></apex:outputLink>
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!$Label.LBL_Total}" />
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="GAP" />
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!SortToggleSimulator}" rerender="simulationGridPanel,simulationInitGridPanel" status="simulatorStatus">
                                    <apex:param name="SortFieldSimulator" value="Last_Unit_Cost__c" assignTo="{!SortFieldSimulator}" />
                                    <apex:outputText value="{!$Label.LBL_COGS_unit}{!IF(SortFieldSimulator=='Last_Unit_Cost__c',IF(SortDirectionSimulator='asc','▲','▼'),'')}" />
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputText value="{!item.COGS.decimalLabel}" style="float: right;" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_In_Price_unit}">
                            <apex:outputText value="{!item.sellinPrice.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalSellinPrice.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalSellinPriceGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>                            
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Gross_Margin}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.grossMargin.percentageLabel}" style="float: right;" />
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_in_Units}" headerClass="redTitle" >                           
                            <apex:outputText value="{!item.sellinUnit.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalSellinUnit.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalSellinUnitGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_In_Value}" headerClass="redTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.sellinValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalSellinValue.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalSellinValueGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Market_Share}" headerClass="redTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.marketShare.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalMarketShare.percentageLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalMarketShareGAP.percentageLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <!-- CASE SELECT SellOUT -->
                        <apex:column headerValue="{!$Label.LBL_PVP_unit}" style="background-color:#FBFBA0;">                            
                            <apex:inputText style="width:100%;text-align:right;" value="{!item.PVP.value}" id="pvpInput"
                                            onkeyup="decimalOnly(this);" tabindex="{!tabindex}" />
                            <apex:variable var="tabindex" value="{!tabindex+1}"/>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Sell_Out_Units}" style="background-color:#FBFBA0;">                            
                            <apex:inputText style="width:100%;text-align:right;" value="{!item.sellOutUnit.value}" id="sellOutUnitInput"
                                            onkeyup="decimalOnly(this);" tabindex="{!tabindex}" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalSellOutUnit.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalSellOutUnitGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                            <apex:variable var="tabindex" value="{!tabindex+1}"/>
                        </apex:column>
                        <!------------------------>
                        <apex:column headerValue="{!$Label.LBL_Sell_Out_Value}" style="background-color:#FBFBA0;">
                            <apex:outputText value="{!item.sellOutValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalSellOutValue.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalSellOutValueGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Unit}" headerClass="greenTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.units.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalUnits.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalUnitsGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Value}" headerClass="greenTitle" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.value.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalValue.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalValueGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_in_Value}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.discountedValue.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalDiscountedValue.decimalLabel}" style="color:#CC0000;float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalDiscountedValueGAP.decimalLabel}" style="color:#CC0000;float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Disc_Sell_Out}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.discSellOut.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalDiscSellOut.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalDiscSellOutGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Cor_Sell_In}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.corSellIn.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalCorSellIn.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalCorSellInGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Cor_COGS}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.corCOGS.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalCorCOGS.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalCorCOGSGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Regular_GM}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.regularGM.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalRegularGM.percentageLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalRegularGMGAP.percentageLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_GM_after_Disc}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.GMAfterDisc.percentageLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalGMAfterDisc.percentageLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalGMAfterDiscGAP.percentageLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:column headerValue="{!$Label.LBL_Diff_in_pt}" style="background-color:#fff2cc;">
                            <apex:outputText value="{!item.Diff.decimalLabel}" style="float: right;" />
                            <apex:facet name="footer">
                                <apex:outputPanel >
                                    <apex:outputText value="{!totalDiff.decimalLabel}" style="float: right;"/>
                                    <apex:outputPanel rendered="{!editSimulator}">
                                        <br/><br/>
                                        <apex:outputText value="{!totalDiffGAP.decimalLabel}" style="float: right;"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:facet>
                        </apex:column>
                        <apex:facet name="footer">
                            <apex:outputPanel layout="table">
                                <apex:outputText rendered="{!NULLVALUE(noOfRecordsFact,0)==0}" value="{!$Label.LBL_No_Record_To_Display}"/>
                                <apex:outputPanel layout="table" rendered="{!noOfRecordsFact>0}">
                                    <apex:selectList value="{!recPerPageSimulator}" multiselect="false" size="1" onchange="refreshPageSizeSimulator();">
                                        <apex:selectOptions value="{!recPerPageOption}"/>
                                    </apex:selectList>
                                    <apex:commandButton status="fetchStatusSimulatorGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_First}" action="{!firstSimulatorPage}" disabled="{!!StdSetControllerSimulator.hasPrevious}" title="{!$Label.LBL_First}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Previous}" action="{!previousSimulatorPage}" disabled="{!!StdSetControllerSimulator.hasPrevious}" title="{!$Label.LBL_Previous}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Next}" action="{!nextSimulatorPage}" disabled="{!!StdSetControllerSimulator.hasNext}" title="{!$Label.LBL_Next}" /> 
                                    <apex:commandButton status="fetchStatusSimulatorGrid" reRender="simulationGridPanel,simulationInitGridPanel" value="{!$Label.LBL_Last}" action="{!lastSimulatorPage}" disabled="{!!StdSetControllerSimulator.hasNext}" title="{!$Label.LBL_Last}" /> 
                                    <apex:outputText style="text-align: right" >{!(StdSetControllerSimulator.pageNumber * recPerPageSimulator)+1-recPerPageSimulator}-{!IF((StdSetControllerSimulator.pageNumber * recPerPageSimulator)>noOfRecordsFact, noOfRecordsFact,
                                        (StdSetControllerSimulator.pageNumber * recPerPageSimulator))} {!$Label.LBL_Of} {!noOfRecordsFact}
                                    </apex:outputText> 
                                    <apex:outputPanel >                      
                                        <apex:actionStatus id="fetchStatusSimulatorGrid" >
                                            <apex:facet name="start" >
                                                <img src="/img/loading.gif" />                    
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:outputPanel>                                 
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:facet>
                    </apex:pageBlockTable>
                </apex:outputPanel>
            </apex:pageBlockSection>
            
            <apex:pageblockbuttons >
                <apex:commandButton value="{!$Label.Save}" action="{!save}" rendered="{!OR(!editSimulator, editSimulator && updatePromoFact)}" status="saveStatus" reRender="messages" />
                <apex:commandButton value="{!$Label.LBL_Export_Details}" action="{!generateExcel}" rendered="{!OR(!editSimulator, editSimulator && updatePromoFact)}" reRender="messages" />
                <apex:commandButton value="{!$Label.Cancel}" action="{!Cancel}" />
                <apex:actionStatus id="saveStatus">
                    <apex:facet name="start">
                        <img src="/img/loading.gif" />
                    </apex:facet>
                </apex:actionStatus>
            </apex:pageblockbuttons>
        </apex:pageBlock>
        
        <!-- IMPORT POPUP -->
        <apex:outputPanel id="popupImportForm">
            <apex:actionFunction name="callImport" action="{!import}" rerender="popupImportForm,productPanel,simulationGridPanel,messages"
                                 status="globalloading" onComplete="hideImportPopup()" >
                <apex:param id="fileName" name="fileName" value="" />
                <apex:param id="fileContent" name="fileContent" value="" />
            </apex:actionFunction>
            <apex:actionFunction name="closeImportPopup" action="{!closePopup}" rerender="popupImportForm" >
                <apex:param name="displayImportPopup" assignTo="{!displayImportPopup}" value="false" />
            </apex:actionFunction>
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayImportPopup}"/>
            <apex:outputPanel styleClass="uploadPopup" layout="block" rendered="{!displayImportPopup}">
                <apex:pageBlock title="File">
                    <apex:pageBlockSection columns="3">
                        <div id="uploadBox" class="uploadBox">
                            <input id="filesInput" type="file" accept=".csv" value="" name=""/>
                        </div>
                        <apex:commandButton id="uploadButton" styleClass="uploadButton" value="UPLOAD"
                                            rerender="popupImportForm" onclick="prepareFileUploads()">
                            <apex:param name="displayImportPopup" assignTo="{!displayImportPopup}" value="false" />
                        </apex:commandButton>
                        <apex:commandButton value="Close" action="{!closePopup}" reRender="popupImportForm">
                            <apex:param name="displayImportPopup" assignTo="{!displayImportPopup}" value="false" />
                        </apex:commandButton>
                    </apex:pageBlockSection>
                </apex:pageBlock>
            </apex:outputPanel>            
        </apex:outputPanel>
    </apex:form>
    
    <script>
    function decimalOnly(e) {
        e.value = e.value.replace(/[^0-9\.]/g,'');
        if(e.value.split('.').length>2) e.value = e.value.replace(/\.+$/,"");
    };
    
    function removeCheckAll() {
        var input = document.getElementsByClassName("checkAllProduct");
        input[0].checked = false;
    };
    </script>
    
    <apex:outputPanel id="uploadJSPanel">
        <script>
        var byteChunkArray;
        var files;
        var currentFile;
        var CHUNK_SIZE = 180000; //Must be evenly divisible by 3, if not, data corruption will occur
        var VIEW_URL = '/servlet/servlet.FileDownload?file=';
        //var parentId, you will see this variable used below but it is set in the component as this is a dynamic value passed in by component attribute
        var $upload;
        
        // hide popup
        function hideImportPopup() {
            closeImportPopup();
        }
        
        //Executes when start Upload button is selected
        function prepareFileUploads(){
            //Get the file(s) from the input field
            files = document.getElementById('filesInput').files;
            
            //Only proceed if there are files selected
            if(files.length == 0){
                alert('Please select a file!');
                return;
            }
            //Disable inputs and buttons during the upload process
            $(".uploadBox input").attr("disabled", "disabled");
            $(".uploadBox button").attr({
                disabled: "disabled",
                class: "btnDisabled"
            });
            //Build out the upload divs for each file selected
            var uploadMarkup = '';
            for(i = 0; i < files.length; i++) {
                //Determine file display size
                if(files[i].size < 1000000){
                    var displaySize = Math.floor(files[i].size/1000) + 'K';
                }
                else {
                    var displaySize  = Math.round((files[i].size / 1000000)*10)/10 + 'MB';
                }
                
                //For each file being uploaded create a div to represent that file, endsWith file size, status bar, etc. data-Status tracks status of upload
                uploadMarkup += '<div class="upload" data-status="pending" data-index="'+i+'">'; //index used to correspond these upload boxes to records in the files array
                ////uploadMarkup += '<div class="fileName"><span class="name">'+ files[i].name + '</span> - '+ displaySize + '</div>';
                uploadMarkup += '</div>';
                uploadMarkup += '</div>';
            }
            //Add markup to the upload box
            $('.uploadBox').append(uploadMarkup);
            //Once elements have been added to the page representing the uploads, start the actual upload process
            checkForUploads();
        }
        
        function checkForUploads(){
            //Get div of the first matching upload element that is 'pending', if none, all uploads are complete
            $upload = $(".upload:first[data-status='pending']");
            if($upload.length != 0){
                //Based on index of the div, get correct file from files array
                currentFile = files[$upload.attr('data-index')];
                /*Build the byteChunkArray array for the current file we are processing. This array is formatted as:
	                                                                    ['0-179999','180000-359999',etc] and represents the chunks of bytes that will be uploaded individually.*/
                byteChunkArray = new Array();
                
                //First check to see if file size is less than the chunk size, if so first and only chunk is entire size of file
                if(currentFile.size <= CHUNK_SIZE){
                    byteChunkArray[0] = '0-' + (currentFile.size - 1);
                }
                else {
                    //Determine how many whole byte chunks make up the file,
                    var numOfFullChunks = Math.floor(currentFile.size / CHUNK_SIZE); //i.e. 1.2MB file would be 1000000 / CHUNK_SIZE
                    var remainderBytes = currentFile.size % CHUNK_SIZE; // would determine remainder of 1200000 bytes that is not a full chunk
                    var startByte = 0;
                    var endByte = CHUNK_SIZE - 1;
                    
                    //Loop through the number of full chunks and build the byteChunkArray array
                    for(i = 0; i < numOfFullChunks; i++){
                        byteChunkArray[i] = startByte+'-'+endByte;
                        
                        //Set new start and stop bytes for next iteration of loop
                        startByte = endByte + 1;
                        endByte += CHUNK_SIZE;
                    }
                    
                    //Add the last chunk of remaining bytes to the byteChunkArray
                    startByte = currentFile.size - remainderBytes;
                    endByte = currentFile.size;
                    byteChunkArray.push(startByte+'-'+endByte);
                }
                //Start processing the byteChunkArray for the current file, parameter is '' because this is the first chunk being uploaded and there is no attachment Id
                processByteChunkArray();
                
            }else{
                //All uploads completed, enable the input and buttons
                $(".uploadBox input").removeAttr("disabled");
                $(".uploadBox button").removeAttr("disabled").attr("class","btn");
                
                /*Remove the browse input element and replace it, this essentially removes
	                                                                    the selected files and helps prevent duplicate uploads*/
                $("#filesInput").replaceWith('<input type="file" name="file" multiple="true" id="filesInput">');
            }
        }
        
        //Uploads a chunk of bytes, if attachmentId is passed in it will attach the bytes to an existing attachment record
        function processByteChunkArray(){
            //Proceed if there are still values in the byteChunkArray, if none, all piece of the file have been uploaded
            if(byteChunkArray.length> 0){
                //Determine the byte range that needs to uploaded, if byteChunkArray is like... ['0-179999','180000-359999']
                var indexes = byteChunkArray[0].split('-'); //... get the first index range '0-179999' -> ['0','179999']
                var startByte = parseInt(indexes[0]); //0
                var stopByte = parseInt(indexes[1]); //179999
                
                //Slice the part of the file we want to upload, currentFile variable is set in checkForUploads() method that is called before this method
                if(currentFile.webkitSlice){
                    var blobChunk = currentFile.webkitSlice(startByte , stopByte + 1);
                }else if (currentFile.mozSlice) {
                    var blobChunk = currentFile.mozSlice(startByte , stopByte + 1);
                }else {
                    var blobChunk = currentFile.slice(startByte , stopByte + 1);
                }
                
                //Create a new reader object, part of HTML5 File API
                var reader = new FileReader();
                
                //Read the blobChunk as a binary string, reader.onloadend function below is automatically called after this line
                reader.readAsBinaryString(blobChunk);
                
                //Create a reader.onload function, this will execute immediately after reader.readAsBinaryString() function above;
                reader.onloadend = function(evt){
                    if(evt.target.readyState == FileReader.DONE){ //Make sure read was successful, DONE == 2
                        //Base 64 encode the data for transmission to the server with JS remoting, window.btoa currently on support by some browsers
                        var base64value = window.btoa(evt.target.result);
                        //Use js remoting to send the base64 encoded chunk for uploading
                        callImport(currentFile.name, base64value);
                    }
                    else {
                        //Error handling for bad read
                        alert('Could not read file');
                    }
                };
            }
            else {
                //This file has completed, all byte chunks have been uploaded, set status on the div to complete
                $upload.attr('data-status','complete');
                
                //Change name of file to link of uploaded attachment
                $upload.find(".name").html('<a href="' + VIEW_URL + '" target="_blank">'+ currentFile.name +'</a>');
                
                //Call the checkForUploads to find the next upload div that has data-status="incomplete" and start the upload process. 
                checkForUploads();
            }
        }        
        </script>
    </apex:outputPanel>
    <style type="text/css">
        .popupBackground {
        background-color: black;
        opacity: 0.20;
        filter: alpha(opacity = 20);
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 9998;
        }
        .uploadPopup {
        background-color: white;
        border-width: 2px;
        border-style: solid;
        z-index: 9999;
        left: 50%;
        padding: 10px;
        position: absolute;
        width: 700px;
        margin-left: -350px;
        top: 100px;
        }
    </style>
</apex:page>